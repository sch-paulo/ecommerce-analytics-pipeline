services:
  postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
    ports:
      - "8501:8501"
    depends_on:
      postgres:
        condition: service_healthy
      etl:
        condition: service_completed_successfully
    networks:
      - ecommerce_network
    env_file:
      - .env

  etl:
    build:
      context: .
      dockerfile: src/Dockerfile
    volumes:
      - ./src:/app/src
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce_network
    command: ["python", "src/load_to_db.py"]
    env_file:
      - .env

volumes:
  postgres_data:

networks:
  ecommerce_network:
    driver: bridge
